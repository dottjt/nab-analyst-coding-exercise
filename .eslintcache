[{"/Users/Julius.Reade/code/PER/nab-analyst/src/index.tsx":"1","/Users/Julius.Reade/code/PER/nab-analyst/src/reportWebVitals.ts":"2","/Users/Julius.Reade/code/PER/nab-analyst/src/pages/app/App.tsx":"3"},{"size":510,"mtime":1611189630599,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1611120492630,"results":"6","hashOfConfig":"5"},{"size":3101,"mtime":1611208222564,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1024qih",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/Julius.Reade/code/PER/nab-analyst/src/index.tsx",[],["16","17"],"/Users/Julius.Reade/code/PER/nab-analyst/src/reportWebVitals.ts",[],"/Users/Julius.Reade/code/PER/nab-analyst/src/pages/app/App.tsx",["18"],"import axios from 'axios';\nimport { useEffect, useState, useCallback } from 'react';\nimport './App.css';\nimport debounce from 'lodash.debounce';\n\nimport { WeatherForecast } from '../../util/types';\n\nconst App: React.FC = () => {\n  const [ searchValue, setSearchValue ] = useState<string>('');\n  const [ loading, setLoading ] = useState<boolean>(false);\n  const [ weatherForecasts, setWeatherForecasts ] = useState<WeatherForecast[]>([]);\n\n  const getSearchData = async (\n    searchTeam: string,\n  ): Promise<void> => {\n    const searchDataURL = `http://localhost:7777/weather-search?location=${searchTeam}`;\n    const response = await axios.get(searchDataURL);\n\n    setWeatherForecasts(response.data);\n    setLoading(false);\n  }\n\n  const getSearchDataDebounce = useCallback(\n    debounce(async () => {\n      if (searchValue) {\n        setLoading(true);\n        await getSearchData(searchValue);\n      } else {\n        setWeatherForecasts([]);\n        setLoading(false);\n      }\n      await getSearchData(searchValue)\n    }, 250),\n    []\n  );\n\n  useEffect(() => {\n    getSearchDataDebounce();\n  }, [getSearchDataDebounce, setWeatherForecasts, setLoading, searchValue]);\n\n  const hasNotInputCityName = !loading && weatherForecasts.length === 0 && !searchValue;\n  const hasNotFoundCity = !loading && weatherForecasts.length === 0 && searchValue;\n  const hasFoundCity = !loading && weatherForecasts.length > 0;\n\n  return (\n    <div className='app'>\n      <h1>Five Day Weather Forecast :D</h1>\n      <input\n        value={searchValue}\n        placeholder='i.e. Sydney'\n        className='weather__forecast__input'\n        aria-label='city-input'\n        onChange={(e) => setSearchValue(e.target.value) }\n      />\n\n      {loading && (\n        <p>Searching forecasts...</p>\n      )}\n      {hasNotInputCityName && (\n        <>\n          <p>Please input a city name to discover it's forecast!</p>\n          <p>i.e. London, New York etc.</p>\n        </>\n      )}\n      {hasNotFoundCity && (\n        <p>No city found with that name!</p>\n      )}\n\n      {hasFoundCity && (\n        <div className='weather__forecasts__list'>\n          {weatherForecasts.map(\n            (weatherForecast: WeatherForecast) => (\n              <WeatherForecastItem key={weatherForecast.id} weatherForecast={weatherForecast} />\n            )\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\n\nconst WeatherForecastItem: React.FC<{ weatherForecast: WeatherForecast }> = ({ weatherForecast }) => {\n  const {\n    applicable_date,\n    min_temp,\n    max_temp,\n  } = weatherForecast;\n\n  const weatherDay: number = new Date(applicable_date).getDay();\n  const weatherDayName: string = days[weatherDay];\n  const minTemp = Math.round(min_temp);\n  const maxTemp = Math.round(max_temp);\n\n  return (\n    <div className='weather__forecast__item'>\n      <h2>{weatherDayName}</h2>\n      <div><span className='temp__label'>Min:</span> {minTemp}</div>\n      <div><span className='temp__label'>Max:</span> {maxTemp}</div>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":23,"column":33,"nodeType":"25","endLine":23,"endColumn":44},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","Identifier","no-global-assign","no-unsafe-negation"]